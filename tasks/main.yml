---
- name: Install packages
  tags: ad_member
  package:
    name: "{{ ad_member_packages }}"
    state: present

# TODO option to use a configuration template
#- name: Install sssd conf
#  tags: ad_member
#  template:
#    src: "{{ ansible_distribution|lower }}_sssd.conf.j2"
#    dest: "{{ ad_member_sssd_config_file }}"
#    owner: root
#    group: root
#    mode: '0600'
#  notify:
#    - sssd restart
#XXX Joining the domain will create an sssd config with reasonable defaults

- name: Query realms
  tags: ad_member
  command: "realm list -an"
  register: ad_member_realm_query
  changed_when: false

- name: Join to the domain
  when: "ad_member_realm_query.stdout is defined and ad_member_domain_l not in ad_member_realm_query.stdout"
  tags: ad_member
  # do not log to preserve password secrecy
  no_log: True
  shell: "echo {{ ad_member_kerberos_pass }} | realm join -v --user {{ ad_member_kerberos_user }} --os-name={{ ansible_distribution }} --os-version={{ ansible_distribution_version }} {{ ad_member_domain }}"
  notify:
    - sssd restart

- name: Set sssd fallback_homedir
  tags: ad_member
  lineinfile:
    path: "{{ ad_member_sssd_config_path }}"
    regexp: '^\s*fallback_homedir\s*=.*'
    insertafter: "^[domain/{{ ad_member_domain_l }}]"
    line: "fallback_homedir = {{ ad_member_sssd_fallback_homedir }}"
    state: present
  notify:
    - sssd restart

- name: Set sssd use_fully_qualified_names
  tags: ad_member
  lineinfile:
    path: "{{ ad_member_sssd_config_path }}"
    regexp: '^\s*use_fully_qualified_names\s*=.*'
    insertafter: "^[domain/{{ ad_member_domain_l }}]"
    line: "use_fully_qualified_names = {{ ad_member_sssd_use_fully_qualified_names }}"
    state: present
  notify:
    - sssd restart

- name: Enable PAM automatic homedir creation
  when: ad_member_automatic_homedir_creation
  tags: ad_member
  shell: "pam-auth-update --package --enable mkhomedir"

# restart services so test gets up to date config
# TODO not running handler!
- meta: flush_handlers

- name: Test join was successfull
  when: "not ansible_check_mode and ad_member_test_user is defined and ad_member_test_user_uid is defined"
  tags: ad_member
  block:
    - name: Query AD user
      command: "id -u {{ ad_member_test_user }}"
      register: ad_member_user_query
      changed_when: false

    - name: Test join was successful
      when: 'ad_member_user_query.stdout is defined'
      assert:
        that:
          - "ad_member_test_user_uid in ad_member_user_query.stdout"
